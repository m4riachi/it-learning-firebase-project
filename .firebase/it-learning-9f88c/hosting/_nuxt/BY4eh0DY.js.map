{"version":3,"file":"BY4eh0DY.js","sources":["../../../../node_modules/uuid/dist/esm-browser/stringify.js","../../../../node_modules/uuid/dist/esm-browser/rng.js","../../../../node_modules/uuid/dist/esm-browser/native.js","../../../../node_modules/uuid/dist/esm-browser/v4.js","../../../../composables/stores/error-handler.ts"],"sourcesContent":["import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random || (options.rng || rng)();\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","import { defineStore } from 'pinia';\nimport { v4 as uuidv4 } from 'uuid';\nimport { reactive } from 'vue';\n\nexport enum ToastEnum {\n  error = 'error',\n  warning = 'warning',\n  success = 'success',\n}\nexport interface ToastType {\n  key: string;\n  type: ToastEnum;\n  title: string;\n  message: string;\n}\n\nexport const useErrorHandlerStore = defineStore('error-handler', () => {\n  const toastList = reactive<ToastType[]>([]);\n  const errorMessage = ref('');\n  const shouldInvalidateQueries = ref(false);\n  const showErrorMessage = ref(false);\n  const setShowErrorMessage = (value: boolean) => {\n    showErrorMessage.value = value;\n  };\n\n  const addToast = ({\n    type,\n    title = '',\n    message = '',\n    error,\n    timeout = 0,\n  }: {\n    type: ToastEnum;\n    title?: string;\n    message?: string;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- ingore because we don't need to type errors\n    error?: any;\n    timeout?: number;\n  }): string => {\n    const key = uuidv4();\n\n    if (!title) {\n      title = ToastEnum[type];\n    }\n\n    let errorDetail = '';\n    if (error && typeof error.message === 'string') {\n      errorDetail = error.message as string;\n    }\n\n    if (type === ToastEnum.error) {\n      message = `${message}`;\n    }\n\n    toastList.push({\n      key,\n      type,\n      title,\n      message: `${message}  ${errorDetail}`,\n    });\n\n    if (timeout > 0) {\n      setTimeout(() => {\n        closeToast(key);\n      }, timeout);\n    }\n\n    return key;\n  };\n\n  const closeToast = (key: string) => {\n    let deleteIndex = -1;\n    toastList.forEach((t: ToastType, index: number) => {\n      if (t.key === key) deleteIndex = index;\n    });\n    toastList.splice(deleteIndex, 1);\n  };\n\n  // clear all toasts warning from toastList\n  const clearToastsWarning = () => {\n    for (let i = toastList.length - 1; i >= 0; i--) {\n      if (toastList[i].type === ToastEnum.warning) {\n        toastList.splice(i, 1);\n      }\n    }\n  };\n\n  return {\n    toastList,\n    addToast,\n    closeToast,\n    errorMessage,\n    shouldInvalidateQueries,\n    clearToastsWarning,\n    showErrorMessage,\n    setShowErrorMessage,\n  };\n});\n"],"names":["byteToHex","i","unsafeStringify","arr","offset","getRandomValues","rnds8","rng","randomUUID","native","v4","options","buf","rnds","ToastEnum","useErrorHandlerStore","defineStore","toastList","reactive","errorMessage","ref","shouldInvalidateQueries","showErrorMessage","setShowErrorMessage","value","addToast","type","title","message","error","timeout","key","uuidv4","errorDetail","closeToast","deleteIndex","t","index"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}