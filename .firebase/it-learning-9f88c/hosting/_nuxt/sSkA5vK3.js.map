{"version":3,"file":"sSkA5vK3.js","sources":["../../../../node_modules/@iconify/utils/lib/icon/defaults.mjs","../../../../node_modules/@iconify/utils/lib/svg/html.mjs","../../../../node_modules/@iconify/utils/lib/svg/size.mjs","../../../../node_modules/@iconify/utils/lib/svg/url.mjs","../../../../node_modules/@iconify/utils/lib/icon/square.mjs","../../../../node_modules/@iconify/utils/lib/customisations/defaults.mjs","../../../../node_modules/@iconify/utils/lib/svg/defs.mjs","../../../../node_modules/@iconify/utils/lib/svg/build.mjs","../../../../node_modules/@iconify/utils/lib/css/common.mjs","../../../../node_modules/@iconify/utils/lib/css/format.mjs","../../../../node_modules/@iconify/utils/lib/css/icon.mjs","../../../../node_modules/@nuxt/icon/dist/runtime/components/shared.js","../../../../node_modules/@nuxt/icon/dist/runtime/components/css.js","../../../../node_modules/@nuxt/icon/dist/runtime/components/svg.js","../../../../node_modules/@nuxt/icon/dist/runtime/components/index.js"],"sourcesContent":["const defaultIconDimensions = Object.freeze(\n  {\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16\n  }\n);\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze({\n  ...defaultIconDimensions,\n  ...defaultIconTransformations\n});\nconst defaultExtendedIconProps = Object.freeze({\n  ...defaultIconProps,\n  body: \"\",\n  hidden: false\n});\n\nexport { defaultExtendedIconProps, defaultIconDimensions, defaultIconProps, defaultIconTransformations };\n","function iconToHTML(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n  for (const attr in attributes) {\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n  }\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\n\nexport { iconToHTML };\n","const unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision || 100;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nexport { calculateSize };\n","function encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\nfunction svgToData(svg) {\n  return \"data:image/svg+xml,\" + encodeSVGforURL(svg);\n}\nfunction svgToURL(svg) {\n  return 'url(\"' + svgToData(svg) + '\")';\n}\n\nexport { encodeSVGforURL, svgToData, svgToURL };\n","function makeIconSquare(icon) {\n  if (icon.width !== icon.height) {\n    const max = Math.max(icon.width, icon.height);\n    return {\n      ...icon,\n      width: max,\n      height: max,\n      left: icon.left - (max - icon.width) / 2,\n      top: icon.top - (max - icon.height) / 2\n    };\n  }\n  return icon;\n}\nfunction makeViewBoxSquare(viewBox) {\n  const [left, top, width, height] = viewBox;\n  if (width !== height) {\n    const max = Math.max(width, height);\n    return [left - (max - width) / 2, top - (max - height) / 2, max, max];\n  }\n  return viewBox;\n}\n\nexport { makeIconSquare, makeViewBoxSquare };\n","import { defaultIconTransformations } from '../icon/defaults.mjs';\n\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze({\n  // Dimensions\n  ...defaultIconSizeCustomisations,\n  // Transformations\n  ...defaultIconTransformations\n});\n\nexport { defaultIconCustomisations, defaultIconSizeCustomisations };\n","function splitSVGDefs(content, tag = \"defs\") {\n  let defs = \"\";\n  const index = content.indexOf(\"<\" + tag);\n  while (index >= 0) {\n    const start = content.indexOf(\">\", index);\n    const end = content.indexOf(\"</\" + tag);\n    if (start === -1 || end === -1) {\n      break;\n    }\n    const endEnd = content.indexOf(\">\", end);\n    if (endEnd === -1) {\n      break;\n    }\n    defs += content.slice(start + 1, end).trim();\n    content = content.slice(0, index).trim() + content.slice(endEnd + 1);\n  }\n  return {\n    defs,\n    content\n  };\n}\nfunction mergeDefsAndContent(defs, content) {\n  return defs ? \"<defs>\" + defs + \"</defs>\" + content : content;\n}\nfunction wrapSVGContent(body, start, end) {\n  const split = splitSVGDefs(body);\n  return mergeDefsAndContent(split.defs, start + split.content + end);\n}\n\nexport { mergeDefsAndContent, splitSVGDefs, wrapSVGContent };\n","import { defaultIconProps } from '../icon/defaults.mjs';\nimport { defaultIconCustomisations } from '../customisations/defaults.mjs';\nimport { calculateSize } from './size.mjs';\nimport { wrapSVGContent } from './defs.mjs';\n\nconst isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = {\n    ...defaultIconProps,\n    ...icon\n  };\n  const fullCustomisations = {\n    ...defaultIconCustomisations,\n    ...customisations\n  };\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\n          \"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\"\n        );\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\n        \"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\"\n      );\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\n          \"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n      case 2:\n        transformations.unshift(\n          \"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\"\n        );\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\n          \"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = wrapSVGContent(\n        body,\n        '<g transform=\"' + transformations.join(\" \") + '\">',\n        \"</g>\"\n      );\n    }\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n  const attributes = {};\n  const setAttr = (prop, value) => {\n    if (!isUnsetKeyword(value)) {\n      attributes[prop] = value.toString();\n    }\n  };\n  setAttr(\"width\", width);\n  setAttr(\"height\", height);\n  const viewBox = [box.left, box.top, boxWidth, boxHeight];\n  attributes.viewBox = viewBox.join(\" \");\n  return {\n    attributes,\n    viewBox,\n    body\n  };\n}\n\nexport { iconToSVG, isUnsetKeyword };\n","import { iconToHTML } from '../svg/html.mjs';\nimport { calculateSize } from '../svg/size.mjs';\nimport { svgToURL } from '../svg/url.mjs';\nimport { makeViewBoxSquare } from '../icon/square.mjs';\nimport { iconToSVG } from '../svg/build.mjs';\nimport '../icon/defaults.mjs';\nimport '../customisations/defaults.mjs';\nimport '../svg/defs.mjs';\n\nfunction getCommonCSSRules(options) {\n  const result = {\n    display: \"inline-block\",\n    width: \"1em\",\n    height: \"1em\"\n  };\n  const varName = options.varName;\n  if (options.pseudoSelector) {\n    result[\"content\"] = \"''\";\n  }\n  switch (options.mode) {\n    case \"background\":\n      if (varName) {\n        result[\"background-image\"] = \"var(--\" + varName + \")\";\n      }\n      result[\"background-repeat\"] = \"no-repeat\";\n      result[\"background-size\"] = \"100% 100%\";\n      break;\n    case \"mask\":\n      result[\"background-color\"] = \"currentColor\";\n      if (varName) {\n        result[\"mask-image\"] = result[\"-webkit-mask-image\"] = \"var(--\" + varName + \")\";\n      }\n      result[\"mask-repeat\"] = result[\"-webkit-mask-repeat\"] = \"no-repeat\";\n      result[\"mask-size\"] = result[\"-webkit-mask-size\"] = \"100% 100%\";\n      break;\n  }\n  return result;\n}\nfunction generateItemCSSRules(icon, options) {\n  const result = {};\n  const varName = options.varName;\n  const buildResult = iconToSVG(icon);\n  let viewBox = buildResult.viewBox;\n  if (viewBox[2] !== viewBox[3]) {\n    if (options.forceSquare) {\n      viewBox = makeViewBoxSquare(viewBox);\n    } else {\n      result[\"width\"] = calculateSize(\"1em\", viewBox[2] / viewBox[3]);\n    }\n  }\n  const svg = iconToHTML(\n    buildResult.body.replace(/currentColor/g, options.color || \"black\"),\n    {\n      viewBox: `${viewBox[0]} ${viewBox[1]} ${viewBox[2]} ${viewBox[3]}`,\n      width: `${viewBox[2]}`,\n      height: `${viewBox[3]}`\n    }\n  );\n  const url = svgToURL(svg);\n  if (varName) {\n    result[\"--\" + varName] = url;\n  } else {\n    switch (options.mode) {\n      case \"background\":\n        result[\"background-image\"] = url;\n        break;\n      case \"mask\":\n        result[\"mask-image\"] = result[\"-webkit-mask-image\"] = url;\n        break;\n    }\n  }\n  return result;\n}\nfunction generateItemContent(icon, options) {\n  const buildResult = iconToSVG(icon);\n  const viewBox = buildResult.viewBox;\n  const height = options.height;\n  const width = options.width ?? calculateSize(height, viewBox[2] / viewBox[3]);\n  const svg = iconToHTML(\n    buildResult.body.replace(/currentColor/g, options.color || \"black\"),\n    {\n      viewBox: `${viewBox[0]} ${viewBox[1]} ${viewBox[2]} ${viewBox[3]}`,\n      width: width.toString(),\n      height: height.toString()\n    }\n  );\n  return svgToURL(svg);\n}\n\nexport { generateItemCSSRules, generateItemContent, getCommonCSSRules };\n","const format = {\n  selectorStart: {\n    compressed: \"{\",\n    compact: \" {\",\n    expanded: \" {\"\n  },\n  selectorEnd: {\n    compressed: \"}\",\n    compact: \"; }\\n\",\n    expanded: \";\\n}\\n\"\n  },\n  rule: {\n    compressed: \"{key}:\",\n    compact: \" {key}: \",\n    expanded: \"\\n  {key}: \"\n  }\n};\nfunction formatCSS(data, mode = \"expanded\") {\n  const results = [];\n  for (let i = 0; i < data.length; i++) {\n    const { selector, rules } = data[i];\n    const fullSelector = selector instanceof Array ? selector.join(mode === \"compressed\" ? \",\" : \", \") : selector;\n    let entry = fullSelector + format.selectorStart[mode];\n    let firstRule = true;\n    for (const key in rules) {\n      if (!firstRule) {\n        entry += \";\";\n      }\n      entry += format.rule[mode].replace(\"{key}\", key) + rules[key];\n      firstRule = false;\n    }\n    entry += format.selectorEnd[mode];\n    results.push(entry);\n  }\n  return results.join(mode === \"compressed\" ? \"\" : \"\\n\");\n}\n\nexport { formatCSS };\n","import { defaultIconProps } from '../icon/defaults.mjs';\nimport { getCommonCSSRules, generateItemCSSRules, generateItemContent } from './common.mjs';\nimport { formatCSS } from './format.mjs';\nimport '../svg/html.mjs';\nimport '../svg/size.mjs';\nimport '../svg/url.mjs';\nimport '../icon/square.mjs';\nimport '../svg/build.mjs';\nimport '../customisations/defaults.mjs';\nimport '../svg/defs.mjs';\n\nfunction getIconCSS(icon, options = {}) {\n  const body = options.customise ? options.customise(icon.body) : icon.body;\n  const mode = options.mode || (options.color || !body.includes(\"currentColor\") ? \"background\" : \"mask\");\n  let varName = options.varName;\n  if (varName === void 0 && mode === \"mask\") {\n    varName = \"svg\";\n  }\n  const newOptions = {\n    ...options,\n    // Override mode and varName\n    mode,\n    varName\n  };\n  if (mode === \"background\") {\n    delete newOptions.varName;\n  }\n  const rules = {\n    ...options.rules,\n    ...getCommonCSSRules(newOptions),\n    ...generateItemCSSRules(\n      {\n        ...defaultIconProps,\n        ...icon,\n        body\n      },\n      newOptions\n    )\n  };\n  const selector = options.iconSelector || \".icon\";\n  return formatCSS(\n    [\n      {\n        selector,\n        rules\n      }\n    ],\n    newOptions.format\n  );\n}\nfunction getIconContentCSS(icon, options) {\n  const body = options.customise ? options.customise(icon.body) : icon.body;\n  const content = generateItemContent(\n    {\n      ...defaultIconProps,\n      ...icon,\n      body\n    },\n    options\n  );\n  const selector = options.iconSelector || \".icon::after\";\n  return formatCSS(\n    [\n      {\n        selector,\n        rules: {\n          ...options.rules,\n          content\n        }\n      }\n    ],\n    options.format\n  );\n}\n\nexport { getIconCSS, getIconContentCSS };\n","import { computed } from \"vue\";\nimport { getIcon as _getIcon, addIcon as _addIcon, loadIcon as _loadIcon } from \"@iconify/vue\";\nimport { useAppConfig } from \"#imports\";\nimport { init as initClientBundle } from \"#build/nuxt-icon-client-bundle\";\nexport { initClientBundle };\nexport async function loadIcon(name, timeout) {\n  if (!name)\n    return null;\n  initClientBundle(_addIcon);\n  const _icon = _getIcon(name);\n  if (_icon)\n    return _icon;\n  let timeoutWarn;\n  const load = _loadIcon(name).catch(() => {\n    console.warn(`[Icon] failed to load icon \\`${name}\\``);\n    return null;\n  });\n  if (timeout > 0)\n    await Promise.race([\n      load,\n      new Promise((resolve) => {\n        timeoutWarn = setTimeout(() => {\n          console.warn(`[Icon] loading icon \\`${name}\\` timed out after ${timeout}ms`);\n          resolve();\n        }, timeout);\n      })\n    ]).finally(() => clearTimeout(timeoutWarn));\n  else\n    await load;\n  return _getIcon(name);\n}\nexport function useResolvedName(getName) {\n  const options = useAppConfig().icon;\n  const collections = (options.collections || []).sort((a, b) => b.length - a.length);\n  return computed(() => {\n    const name = getName();\n    const bare = name.startsWith(options.cssSelectorPrefix) ? name.slice(options.cssSelectorPrefix.length) : name;\n    const resolved = options.aliases?.[bare] || bare;\n    if (!resolved.includes(\":\")) {\n      const collection = collections.find((c) => resolved.startsWith(c + \"-\"));\n      return collection ? collection + \":\" + resolved.slice(collection.length + 1) : resolved;\n    }\n    return resolved;\n  });\n}\n","import { addIcon, getIcon as _getIcon } from \"@iconify/vue\";\nimport { computed, watch, h, defineComponent } from \"vue\";\nimport { getIconCSS } from \"@iconify/utils/lib/css/icon\";\nimport { loadIcon } from \"./shared.js\";\nimport { useAppConfig, useNuxtApp, useHead, useRuntimeConfig, onServerPrefetch } from \"#imports\";\nlet cssSelectors;\nconst SYMBOL_SERVER_CSS = \"NUXT_ICONS_SERVER_CSS\";\nfunction escapeCssSelector(selector) {\n  return selector.replace(/([^\\w-])/g, \"\\\\$1\");\n}\nfunction getAllSelectors() {\n  if (cssSelectors)\n    return cssSelectors;\n  cssSelectors = /* @__PURE__ */ new Set();\n  const filter = (selector) => {\n    selector = selector.replace(/^:where\\((.*)\\)$/, \"$1\").trim();\n    if (selector.startsWith(\".\")) {\n      return selector;\n    }\n  };\n  const scanCssRules = (rules) => {\n    if (!rules?.length)\n      return;\n    for (const rule of rules) {\n      if (rule?.cssRules) {\n        scanCssRules(rule.cssRules);\n      }\n      const selectorRaw = rule?.selectorText;\n      if (typeof selectorRaw === \"string\") {\n        const selector = filter(selectorRaw);\n        if (selector)\n          cssSelectors.add(selector);\n      }\n    }\n  };\n  if (typeof document !== \"undefined\") {\n    for (const styleSheet of document.styleSheets) {\n      try {\n        const rules = styleSheet.cssRules || styleSheet.rules;\n        scanCssRules(rules);\n      } catch {\n      }\n    }\n  }\n  return cssSelectors;\n}\nexport const NuxtIconCss = /* @__PURE__ */ defineComponent({\n  name: \"NuxtIconCss\",\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    customize: {\n      type: Function,\n      required: false\n    }\n  },\n  setup(props) {\n    const nuxt = useNuxtApp();\n    const options = useAppConfig().icon;\n    const cssClass = computed(() => props.name ? options.cssSelectorPrefix + props.name : \"\");\n    function getIcon(name) {\n      if (!name)\n        return;\n      const icon = _getIcon(name);\n      if (icon)\n        return icon;\n      const payload = nuxt.payload?.data?.[name];\n      if (payload) {\n        addIcon(name, payload);\n        return payload;\n      }\n    }\n    const selector = computed(() => \".\" + escapeCssSelector(cssClass.value));\n    function getCSS(icon, withLayer = true) {\n      let iconSelector = selector.value;\n      if (options.cssWherePseudo) {\n        iconSelector = `:where(${iconSelector})`;\n      }\n      const css = getIconCSS(icon, {\n        iconSelector,\n        format: \"compressed\",\n        customise: props.customize ?? options.customize\n      });\n      if (options.cssLayer && withLayer) {\n        return `@layer ${options.cssLayer} { ${css} }`;\n      }\n      return css;\n    }\n    if (import.meta.client) {\n      const selectors = getAllSelectors();\n      async function mountCSS(icon) {\n        if (selectors.has(selector.value))\n          return;\n        if (typeof document === \"undefined\")\n          return;\n        const style = document.createElement(\"style\");\n        style.textContent = getCSS(icon);\n        if (import.meta.dev) {\n          style.dataset.nuxtIconDev = props.name;\n        }\n        const firstStyle = document.head.querySelector('style, link[rel=\"stylesheet\"]');\n        if (firstStyle)\n          document.head.insertBefore(style, firstStyle);\n        else\n          document.head.appendChild(style);\n        selectors.add(selector.value);\n      }\n      watch(\n        () => props.name,\n        () => {\n          if (selectors.has(selector.value)) {\n            return;\n          }\n          const data = getIcon(props.name);\n          if (data) {\n            mountCSS(data);\n          } else {\n            loadIcon(props.name, import.meta.server ? options.fetchTimeout : -1).then((data2) => {\n              if (data2)\n                mountCSS(data2);\n            }).catch(() => null);\n          }\n        },\n        { immediate: true }\n      );\n    }\n    onServerPrefetch(async () => {\n      if (import.meta.server) {\n        const configs = useRuntimeConfig().icon || {};\n        if (!configs?.serverKnownCssClasses?.includes(cssClass.value)) {\n          const icon = await loadIcon(props.name, options.fetchTimeout).catch(() => null);\n          if (!icon)\n            return null;\n          let ssrCSS = nuxt.vueApp._context.provides[SYMBOL_SERVER_CSS];\n          if (!ssrCSS) {\n            ssrCSS = nuxt.vueApp._context.provides[SYMBOL_SERVER_CSS] = /* @__PURE__ */ new Map();\n            nuxt.runWithContext(() => {\n              useHead({\n                style: [\n                  () => {\n                    const sep = import.meta.dev ? \"\\n\" : \"\";\n                    let css = Array.from(ssrCSS.values()).sort().join(sep);\n                    if (options.cssLayer) {\n                      css = `@layer ${options.cssLayer} {${sep}${css}${sep}}`;\n                    }\n                    return { innerHTML: css };\n                  }\n                ]\n              }, {\n                tagPriority: \"low\"\n              });\n            });\n          }\n          if (props.name && !ssrCSS.has(props.name)) {\n            const css = getCSS(icon, false);\n            ssrCSS.set(props.name, css);\n          }\n          return null;\n        }\n      }\n    });\n    return () => h(\"span\", { class: [\"iconify\", cssClass.value] });\n  }\n});\n","import { Icon as Iconify, addIcon } from \"@iconify/vue\";\nimport { h } from \"vue\";\nimport { initClientBundle, loadIcon, useResolvedName } from \"./shared.js\";\nimport { useAsyncData, useNuxtApp, defineComponent, useAppConfig } from \"#imports\";\nexport const NuxtIconSvg = /* @__PURE__ */ defineComponent({\n  name: \"NuxtIconSvg\",\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    customize: {\n      type: Function,\n      required: false\n    }\n  },\n  setup(props, { slots }) {\n    const nuxt = useNuxtApp();\n    const options = useAppConfig().icon;\n    const name = useResolvedName(() => props.name);\n    const storeKey = \"i-\" + name.value;\n    if (name.value) {\n      if (import.meta.server) {\n        useAsyncData(\n          storeKey,\n          () => loadIcon(name.value, options.fetchTimeout),\n          { deep: false }\n        );\n      }\n      if (import.meta.client) {\n        const payload = nuxt.payload.data[storeKey];\n        if (payload) {\n          addIcon(name.value, payload);\n        } else {\n          initClientBundle(addIcon);\n        }\n      }\n    }\n    return () => h(Iconify, {\n      icon: name.value,\n      ssr: true,\n      // Iconify uses `customise`, where we expose `customize` for consistency\n      customise: props.customize ?? options.customize\n    }, slots);\n  }\n});\n","import { computed, defineComponent, h } from \"vue\";\nimport { NuxtIconCss } from \"./css.js\";\nimport { NuxtIconSvg } from \"./svg.js\";\nimport { useResolvedName } from \"./shared.js\";\nimport { useAppConfig, useNuxtApp } from \"#imports\";\nexport default defineComponent({\n  name: \"NuxtIcon\",\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    mode: {\n      type: String,\n      required: false,\n      default: null\n    },\n    size: {\n      type: [Number, String],\n      required: false,\n      default: null\n    },\n    customize: {\n      type: Function,\n      required: false\n    }\n  },\n  setup(props, { slots }) {\n    const nuxtApp = useNuxtApp();\n    const runtimeOptions = useAppConfig().icon;\n    const name = useResolvedName(() => props.name);\n    const component = computed(\n      () => nuxtApp.vueApp?.component(name.value) || ((props.mode || runtimeOptions.mode) === \"svg\" ? NuxtIconSvg : NuxtIconCss)\n    );\n    const style = computed(() => {\n      const size = props.size || runtimeOptions.size;\n      return size ? { fontSize: Number.isNaN(+size) ? size : size + \"px\" } : null;\n    });\n    const customize = props.customize || runtimeOptions.customize;\n    return () => h(\n      component.value,\n      {\n        ...runtimeOptions.attrs,\n        name: name.value,\n        class: runtimeOptions.class,\n        style: style.value,\n        customize\n      },\n      slots\n    );\n  }\n});\n"],"names":["defaultIconDimensions","defaultIconTransformations","defaultIconProps","iconToHTML","body","attributes","renderAttribsHTML","attr","unitsSplit","unitsTest","calculateSize","size","ratio","precision","oldParts","newParts","code","isNumber","num","encodeSVGforURL","svg","svgToData","svgToURL","makeViewBoxSquare","viewBox","left","top","width","height","max","defaultIconSizeCustomisations","defaultIconCustomisations","splitSVGDefs","content","tag","defs","index","start","end","endEnd","mergeDefsAndContent","wrapSVGContent","split","isUnsetKeyword","value","iconToSVG","icon","customisations","fullIcon","fullCustomisations","box","props","transformations","hFlip","vFlip","rotation","tempValue","customisationsWidth","customisationsHeight","boxWidth","boxHeight","setAttr","prop","getCommonCSSRules","options","result","varName","generateItemCSSRules","buildResult","url","format","formatCSS","data","mode","results","i","selector","rules","entry","firstRule","key","getIconCSS","newOptions","loadIcon","name","timeout","_icon","_getIcon","_loadIcon","useResolvedName","getName","useAppConfig","collections","a","b","computed","bare","resolved","_a","collection","c","cssSelectors","escapeCssSelector","getAllSelectors","filter","scanCssRules","rule","selectorRaw","styleSheet","NuxtIconCss","defineComponent","nuxt","useNuxtApp","cssClass","getIcon","payload","_b","addIcon","getCSS","withLayer","iconSelector","css","selectors","mountCSS","style","firstStyle","watch","data2","onServerPrefetch","h","NuxtIconSvg","slots","storeKey","Iconify","__nuxt_component_0","nuxtApp","runtimeOptions","component","customize"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]}